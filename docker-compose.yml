version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-network
    container_name: zookeeper

  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094 # the "0.0.0.0://:9094" the kafka listen from outside the container with plain text
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://192.168.254.182:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE=true
    networks:
      - kafka-network

  kafdrop:
    image: obsidiandynamics/kafdrop:3.28.0
    container_name: kafdrop
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKERCONNECT=kafka:9092
      - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://0.0.0.0:9000
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://192.168.254.182:9000
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
    ports:
      - "9000:9000"
    networks:
      - kafka-network

  nginx:
    image: my_nginx
    container_name: nginx
    ports:
      - "80:80"
    command: /bin/sh -c "apk add --no-cache nodejs npm && nginx -g 'daemon off;'"
    networks:
      - kafka-network

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Set the root password
      MYSQL_DATABASE: my_database # Name of the default database
      MYSQL_USER: my_user # Username for the new user
      MYSQL_PASSWORD: my_password # Password for the new user
    ports:
      - "3306:3306" # Maps port 3306 on the container to port 3306 on the host
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
